.container-fluid {
  margin: 2rem auto;
  display: flex;
  flex-direction: row-reverse;
  justify-content: center;
  align-items: center;
  width: 95%;

  .isLoading {
    display: flex;
    justify-content: center;
    align-items: center;
    height: 50vw;
  }
}

.finishedTvShowFormContainer {
  width: 95% !important;
}

.cardContainer {
  display: flex;
  flex-direction: column;
  justify-content: center;
  margin: 2rem auto 0 auto;
  padding: 1.5rem;
}

.pageTitle {
  margin: 1.2rem;
}

.rowContainerRow {
  display: flex;
  flex-direction: row;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 1rem;
}

.rowLeftContainer {
  width: 60%;
  padding: 1rem;

  .field {
    width: 20%;
  }
}

.rowRightContainer {
  display: flex;
  flex-direction: column;
  width: 40%;
  padding: 1rem;
}

@media (max-width: 768px) {
  .rowLeftContainer,
  .rowRightContainer {
    max-width: 18rem !important;
    font-size: 0.7em;
  }

  .data {
    display: block;
    display: -webkit-box;
    -webkit-line-clamp: 8;
    -webkit-box-orient: vertical;
    overflow: hidden;
    text-overflow: ellipsis;
  }
}

/* star rating */
/*shows the stars side by side, centered, and in reverse order than the HMTL*/
.rating {
  display: flex;
  flex-direction: row-reverse;
  justify-content: center;
}

/*hides the radio buttons*/
.rating > input {
  display: none;
}

/*style the empty stars, sets position:relative as base for pseudo-elements*/
.rating > label {
  position: relative;
  width: 1em;
  font-size: 5vw;
  color: skyblue;
  cursor: pointer;
}

/* sets filled star pseudo-elements */
.rating > label::before {
  content: '\2605';
  position: absolute;
  opacity: 0;
}
/*overlays a filled start character to the hovered element and all previous siblings*/
.rating > label:hover:before,
.rating > label:hover ~ label:before {
  opacity: 1 !important;
}

/*overlays a filled start character on the selected element and all previous siblings*/
.rating > input:checked ~ label:before {
  opacity: 1;
}

/*when an element is selected and pointer re-enters the rating container, selected rate and siblings get semi transparent, as reminder of current selection*/
.rating:hover > input:checked ~ label:before {
  opacity: 0.4;
}

/*just aesthetics*/
body {
  background: #222225;
  color: white;
}
h1,
p {
  text-align: center;
}
p {
  font-size: 1.2rem;
}
@media only screen and (max-width: 600px) {
  h1 {
    font-size: 14px;
  }
  p {
    font-size: 12px;
  }
}

.buttonPosition {
  margin-top: 3rem;
  margin-left: auto;
  margin-right: auto;
  display: flex;
  justify-content: center;
}

@media (max-width: 768px) {
  textarea::placeholder {
    font-size: 0.7em;
  }

  .buttonStyle {
    font-size: 0.7em;
  }
}
